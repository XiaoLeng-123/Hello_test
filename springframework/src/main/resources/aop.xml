<?xml version='1.0' encoding='UTF-8' ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util-4.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd"> 
       
	   
		<!-- 
		泛型依赖注入:通过带泛型的父类来确定组件的具体对象
		IOC的总结：
			IOC是一个容器，帮我们管理所有组件，某个组件要使用spring提供的更多(IOC、AOP)必须加入到该容器中；
			容器启动，就会创建所有的单实例的bean;
		
		 -->
		 
		 
		 
		<!-- 开启包自动扫描 -->
		<context:component-scan base-package="com.ljc.spring.*"></context:component-scan>
		
		
		<!-- 开启基于aop注解的功能；引入aop命名空间 -->
		<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
		
		
		
		
</beans>