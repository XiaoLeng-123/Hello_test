<?xml version='1.0' encoding='UTF-8' ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx" 
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/mvc 
       http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
       
       
       <!-- 
       spring管理连接池
       1、加载外部配置文件<context:property-placeholder/>
       2、配置数据库连接池
       3、配置数据源事务管理器
       4、给事务方法加注解 @Transactional
       
        -->
        
     <!-- 开启引用外部文件、 -->
    <context:property-placeholder location="classpath:application.properties"/>   
  
    <!-- 使用注解驱动 -->
    <context:annotation-config />
    
    <!-- 数据库连接池 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/jim" />
        <property name="username" value="root" />
        <property name="password" value="123456" />
        <property name="maxActive" value="255" />
        <property name="maxIdle" value="5" />
        <property name="maxWait" value="10000" />
    </bean>

    <!-- 配置数据源事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

	<!-- 开启基于注解的事务控制模式 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 给事务方法加注解 @Transactional
		事务细节：
			isolation-Isolation   事务的隔离级别
			propagation-Propagation    事务的传播行为
			
			noRollbackFor-Class[]    那些异常事务可以不回滚
			noRollbackForClassName-String[]   String全类名
			rollbackFor-Class[]     那些异常事务需要回滚
			rollbackForClassName-String[]
			
			readOnly-boolean      设置事务为zhi'du
			timeout-int   超时；事务超时自动回滚
	
	 -->
	
    
</beans>